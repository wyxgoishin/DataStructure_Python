"""
题目描述：
    一个有名的按摩师会收到源源不断的预约请求，每个预约都可以选择接或不接。
    在每次预约服务之间要有休息时间，因此她不能接受相邻的预约。给定一个预约
    请求序列，替按摩师找到最优的预约集合（总预约时间最长），返回总的分钟数。
示例：
    输入： [2,7,9,3,1]
    输出： 12
    解释： 选择 1 号预约、 3 号预约和 5 号预约，总时长 = 2 + 9 + 1 = 12。
题解：
    1、动态规划法
    设dp第i个数表示前i个按摩时间的最大按摩时间总和
    则dp[i+1]应当为接下来这个按摩加上dp[i-1]和不接这个按摩的最大值，即
        dp[i+1] = max(nums[i] + dp[i-1], dp[i])
"""

def massage(nums):
    if nums == []:
        return 0
    dp = [0] * (len(nums) + 1)
    dp[1] = nums[0]
    for i in range(2, len(dp)):
        dp[i] = max(nums[i-1] + dp[i-2], dp[i-1])
    return dp[len(nums)]
        

nums = [2,1,4,5,3,1,1,3]
print(massage(nums))